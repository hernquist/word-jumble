{"version":3,"sources":["letters.js","utils.js","components/ShowCheckedWords.js","components/ShowPlayersLetters.js","components/ShowSelectedLetters.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["LETTERS","a","weight","points","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","returnRandomLetter","letters","weightTotal","Object","keys","reduce","sum","letter","randomSample","Math","floor","random","randomNumber","tracker","number","returnValue","findRandomLetter","makeWord","map","value","join","getWordScore","score","checkForDuplication","list","selectedWord","every","listItem","word","ShowCheckedWords","showCheckedWords","checkedWord","key","style","display","flexDirection","justifyContent","margin","fontSize","border","padding","borderRadius","minWidth","textTransform","background","success","position","left","bottom","ShowPlayersLetters","setLetters","pushSelectedLetter","visibility","selected","onClick","index","updateLetters","ShowSelectedLetters","selectedLetters","width","getWordFromResponse","response","get","Game","totalLetters","numberOfLetters","useState","Array","_","setSelectedLetters","setShowCheckedWords","setWordFromApi","gameScore","setGameScore","Date","getTime","initialTimeDone","setInitialTimeDone","calculateTimeLeft","timeLeft","setTimeLeft","useEffect","setTimeout","resetLetterStatuses","checkWord","query","axios","then","console","log","wordData","length","wordScore","catch","error","time","lowOnTime","alignItems","color","height","disabled","defaultProps","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bfe96a22.chunk.js","sourcesContent":["const LETTERS = {\n  a: {\n    weight: 4,\n    points: 1\n  },\n  b: {\n    weight: 2,\n    points: 3\n  },\n  c: {\n    weight: 2,\n    points: 2\n  },\n  d: {\n    weight: 3,\n    points: 2\n  },\n  e: {\n    weight: 4,\n    points: 1\n  },\n  f: {\n    weight: 2,\n    points: 2\n  },\n  g: {\n    weight: 2,\n    points: 2\n  },\n  h: {\n    weight: 2,\n    points: 2\n  },\n  i: {\n    weight: 3,\n    points: 1\n  },\n  j: {\n    weight: 1,\n    points: 8\n  },\n  k: {\n    weight: 2,\n    points: 5\n  },\n  l: {\n    weight: 3,\n    points: 3\n  },\n  m: {\n    weight: 3,\n    points: 2\n  },\n  n: {\n    weight: 3,\n    points: 2\n  },\n  o: {\n    weight: 4,\n    points: 1\n  },\n  p: {\n    weight: 3,\n    points: 2\n  },\n  q: {\n    weight: 1,\n    points: 9\n  },\n  r: {\n    weight: 3,\n    points: 2\n  },\n  s: {\n    weight: 3,\n    points: 2\n  },\n  t: {\n    weight: 3,\n    points: 2\n  },\n  u: {\n    weight: 3,\n    points: 1\n  },\n  v: {\n    weight: 2,\n    points: 4\n  },\n  w: {\n    weight: 2,\n    points: 4\n  },\n  x: {\n    weight: 1,\n    points: 8\n  },\n  y: {\n    weight: 2,\n    points: 3\n  },\n  z: {\n    weight: 1,\n    points: 8\n  }\n};\n\nexport { LETTERS };\n","import { LETTERS } from \"./letters\";\n\nconst getLetterWeightTotal = letters =>\n  Object.keys(letters).reduce((sum, letter) => sum + letters[letter].weight, 0);\n\nconst findRandomLetter = (letters, randomNumber) =>\n  Object.keys(letters).reduce(\n    (tracker, letter) => {\n      if (\n        tracker.number - letters[letter].weight <= 0 &&\n        !tracker.returnValue\n      ) {\n        tracker.returnValue = letter;\n      } else {\n        tracker.number = tracker.number - letters[letter].weight;\n      }\n      return tracker;\n    },\n    {\n      number: randomNumber,\n      returnValue: \"\"\n    }\n  );\n\nconst returnRandomLetter = () => {\n  const weightTotal = getLetterWeightTotal(LETTERS);\n  const randomSample = Math.floor(Math.random() * weightTotal);\n  return findRandomLetter(LETTERS, randomSample);\n};\n\nconst setInitialLetters = totalLetters =>\n  [...Array(totalLetters)].map(_ => ({\n    value: returnRandomLetter().returnValue,\n    selected: false\n  }));\n\nconst makeWord = letters => letters.map(letter => letter.value).join(\"\");\n\nconst getWordScore = letters =>\n  letters.reduce((score, letter) => LETTERS[letter.value].points + score, 0);\n\nconst checkForDuplication = (list, selectedWord) =>\n  list.every(listItem => makeWord(listItem.word) !== selectedWord);\n\nexport {\n  returnRandomLetter,\n  setInitialLetters,\n  makeWord,\n  getWordScore,\n  checkForDuplication\n};\n","import React from \"react\";\nimport { LETTERS } from \"../letters\";\n\nconst ShowCheckedWords = ({ showCheckedWords = [] }) =>\n  showCheckedWords.map((checkedWord, i) => (\n    <div\n      key={\"checkedWord\" + i}\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"spaceBetween\",\n        margin: \"20px 0 0 0\"\n      }}\n    >\n      {checkedWord.word.map((letter, i) => (\n        <div\n          key={\"ShowCheckedWords\" + i}\n          style={{\n            fontSize: \"32px\",\n            border: \"1.5px solid cornflowerBlue\",\n            padding: \"8px 8px 0\",\n            margin: \"4px 4px 0\",\n            borderRadius: \"8px\",\n            minWidth: \"32px\",\n            textTransform: \"uppercase\",\n            background: checkedWord.success ? \"lime\" : \"red\"\n          }}\n        >\n          {letter.value}\n          <div\n            style={{\n              fontSize: \"12px\",\n              position: \"relative\",\n              left: \"16px\",\n              bottom: \"12px\"\n            }}\n          >\n            {LETTERS[letter.value].points}\n          </div>\n        </div>\n      ))}\n    </div>\n  ));\n\nexport default ShowCheckedWords;\n","import React from \"react\";\nimport { LETTERS } from \"../letters\";\n\nconst updateLetters = (letters, index) =>\n  letters.map((letter, i) =>\n    i === index ? { ...letter, selected: !letter.selected } : letter\n  );\n\nconst ShowPlayersLetters = ({\n  letters = [],\n  setLetters,\n  pushSelectedLetter\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"spaceBetween\"\n    }}\n  >\n    {letters.map((letter, i) => (\n      <div\n        key={\"showPlayersLetters\" + i}\n        style={{\n          fontSize: \"32px\",\n          border: \"1.5px solid cornflowerBlue\",\n          padding: \"8px 8px 0\",\n          margin: \"4px 4px 0\",\n          borderRadius: \"8px\",\n          minWidth: \"32px\",\n          textTransform: \"uppercase\",\n          visibility: letter.selected ? \"hidden\" : \"visible\",\n          background: \"orange\"\n        }}\n        onClick={() => {\n          setLetters(updateLetters(letters, i));\n          pushSelectedLetter(letter);\n        }}\n      >\n        {letter.value}\n        <div\n          style={{\n            fontSize: \"12px\",\n            position: \"relative\",\n            left: \"16px\",\n            bottom: \"12px\"\n          }}\n        >\n          {LETTERS[letter.value].points}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default ShowPlayersLetters;\n","import React from \"react\";\nimport { LETTERS } from \"../letters\";\n\nconst ShowSelectedLetters = ({ selectedLetters = [] }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      margin: \"20px 0 0 0\",\n      width: \"413px\"\n    }}\n  >\n    {selectedLetters.map((letter, i) => (\n      <div\n        key={\"showSelectedLetters\" + i}\n        style={{\n          fontSize: \"32px\",\n          border: \"1.5px solid cornflowerBlue\",\n          padding: \"8px 8px 0\",\n          margin: \"4px 4px 0\",\n          borderRadius: \"8px\",\n          minWidth: \"32px\",\n          textTransform: \"uppercase\",\n          background: \"orange\"\n        }}\n      >\n        {letter.value}\n        <div\n          style={{\n            fontSize: \"12px\",\n            position: \"relative\",\n            left: \"16px\",\n            bottom: \"12px\"\n          }}\n        >\n          {LETTERS[letter.value].points}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default ShowSelectedLetters;\n","import React, { useState, useEffect } from \"react\";\nimport { number } from \"prop-types\";\nimport axios from \"axios\";\nimport { get } from \"lodash\";\nimport {\n  setInitialLetters,\n  makeWord,\n  getWordScore,\n  checkForDuplication\n} from \"../utils\";\nimport ShowCheckedWords from \"./ShowCheckedWords\";\nimport ShowPlayersLetters from \"./ShowPlayersLetters\";\nimport ShowSelectedLetters from \"./ShowSelectedLetters\";\n\nconst getWordFromResponse = response => get(response, [\"data\", \"0\"]);\n\nconst Game = ({ numberOfLetters }) => {\n  const [letters, setLetters] = useState(setInitialLetters(numberOfLetters));\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [showCheckedWords, setShowCheckedWords] = useState([]);\n  const [wordFromApi, setWordFromApi] = useState(\"\");\n  const [gameScore, setGameScore] = useState(0);\n\n  const [initialTimeDone, setInitialTimeDone] = useState(\n    new Date().getTime() + 60000\n  );\n\n  const calculateTimeLeft = () => initialTimeDone - new Date().getTime();\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n\n  const pushSelectedLetter = letter =>\n    setSelectedLetters([...selectedLetters, letter]);\n\n  const resetLetterStatuses = letters =>\n    letters.map(letter => ({ ...letter, selected: false }));\n\n  const checkWord = async () => {\n    const selectedWord = makeWord(selectedLetters);\n\n    const query = `https://api.datamuse.com/words?sp=${selectedWord}&max=1`;\n\n    await axios\n      .get(query)\n      .then(response => {\n        setWordFromApi(getWordFromResponse(response));\n        return response;\n      })\n      .then(response => {\n        console.log(response);\n\n        let word = \"\";\n        let score = 0;\n        const wordData = getWordFromResponse(response);\n\n        if (wordData) {\n          word = wordData.word;\n          score = wordData.score;\n        }\n\n        const success = word === selectedWord && word.length > 2 && score > 500;\n\n        if (!checkForDuplication(showCheckedWords, selectedWord)) {\n          console.log(\"SAME!\");\n        } else {\n          setShowCheckedWords([\n            { success, word: selectedLetters },\n            ...showCheckedWords\n          ]);\n\n          if (success) {\n            const wordScore = getWordScore(selectedLetters);\n            setGameScore(gameScore + wordScore);\n          } else {\n            setInitialTimeDone(initialTimeDone - 5000);\n          }\n        }\n        setSelectedLetters([]);\n      })\n      .catch(error => console.log(error));\n\n    setLetters(resetLetterStatuses(letters));\n  };\n\n  const reset = () => {\n    setSelectedLetters([]);\n    setWordFromApi({});\n    setLetters(resetLetterStatuses(letters));\n  };\n\n  const time = timeLeft > 0 ? `${Math.floor(timeLeft / 1000)}s` : \" \";\n  const lowOnTime = timeLeft < 5000 && timeLeft > 0;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"40px 0 0 0\"\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            margin: \"0 20px\",\n            fontSize: \"32px\",\n            color: lowOnTime ? \"red\" : \"black\",\n            width: \"100px\"\n          }}\n        >\n          -{time}-\n        </div>\n        <ShowPlayersLetters\n          letters={letters}\n          setLetters={setLetters}\n          pushSelectedLetter={pushSelectedLetter}\n        />\n        <div style={{ margin: \"0 20px\", fontSize: \"32px\", width: \"100px\" }}>\n          -{gameScore}-\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: \"80px\"\n        }}\n      >\n        <button\n          style={{\n            margin: \"auto 10px\",\n            height: \"30px\",\n            borderRadius: \"5px\",\n            width: \"95px\"\n          }}\n          disabled={timeLeft < 0}\n          onClick={checkWord}\n        >\n          SELECT WORD\n        </button>\n        <ShowSelectedLetters selectedLetters={selectedLetters} />\n        <button\n          style={{\n            margin: \"auto 10px\",\n            height: \"30px\",\n            borderRadius: \"5px\",\n            width: \"95px\"\n          }}\n          disabled={timeLeft < 0}\n          onClick={reset}\n        >\n          CLEAR\n        </button>\n      </div>\n      <ShowCheckedWords showCheckedWords={showCheckedWords} />\n    </div>\n  );\n};\n\nGame.propTypes = {\n  numberOfLetters: number\n};\n\nGame.defaultProps = {\n  numberOfLetters: 7\n};\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./components/Game\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ fontSize: \"40px\" }}>\n      Jumble\n      <Game numberOfLetters={7} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}